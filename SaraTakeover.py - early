import pandas as pd

def process_sara_data(input_file, output_file):
    # Load the Sara export file
    sara_data = pd.read_csv(input_file)
    
    # Ensure critical columns are numeric and clean data
    sara_data['fc2'] = pd.to_numeric(sara_data['fc2'], errors='coerce')
    sara_data['sys_id'] = pd.to_numeric(sara_data['sys_id'], errors='coerce')
    sara_data['xmit_id'] = pd.to_numeric(sara_data['xmit_id'], errors='coerce')
    
    # Drop rows with missing values in critical fields
    sara_data = sara_data.dropna(subset=['fc2', 'sys_id', 'xmit_id'])
    
    # Convert to integers
    sara_data['fc2'] = sara_data['fc2'].astype(int)
    sara_data['sys_id'] = sara_data['sys_id'].astype(int)
    sara_data['xmit_id'] = sara_data['xmit_id'].astype(int)
    
    # Hex conversion with zero padding for single digits
    sara_data['fc2_hex'] = sara_data['fc2'].apply(lambda x: format(x, 'x').zfill(2))
    sara_data['sys_id_hex'] = sara_data['sys_id'].apply(lambda x: format(x, 'x').zfill(2))
    sara_data['xmit_id_hex'] = sara_data['xmit_id'].apply(lambda x: format(x, 'x').zfill(2))
    
    # Combine hex and convert to decimal
    sara_data['SerialNumber'] = (sara_data['fc2_hex'] +
                                 sara_data['sys_id_hex'] +
                                 sara_data['xmit_id_hex']).apply(lambda x: int(x, 16))
    
    # Filter out rows with SerialNumber == 0
    sara_data = sara_data[sara_data['SerialNumber'] != 0]
    
    # Map alarm_device_type to TypeID
    sara_data['TypeID'] = sara_data['alarm_device_type']
    
    # Select final fields for Arial import
    arial_data = sara_data.rename(columns={
        'alarm_description': 'Description',
        'last_check_in': 'LastCheckIn'
    })[['SerialNumber', 'TypeID', 'Description', 'LastCheckIn']]
    
    # Save to CSV
    arial_data.to_csv(output_file, index=False)
    print(f"Processed data saved to {output_file}")

# Example usage
process_sara_data("Sara Export working document(Master).csv", "Arial_Import.csv")

